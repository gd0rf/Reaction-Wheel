/************************************************************************************
 * This file was auto-generated by CIDEA                           .                *
 * Please do not modify the contents of this file manually.                         *
 ***********************************************************************************/

#ifndef TYPES_COMMON_TRANSFER_1__H
#define TYPES_COMMON_TRANSFER_1__H

#include <cubeObc/cubeObc_typeDef.h>
#include <cubeObc/cubeObc_errorDef.h>
#include <cubeObc/cubeObc_tctlmDef.h>


#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
 *******************************   DEFINES   ***********************************
 ******************************************************************************/

/*******************************************************************************
 *******************************   TYPEDEFS  ***********************************
 ******************************************************************************/

/**
 * @brief Transfer Frame message structure
 * @details Image frame to or from buffer
 */
typedef struct TCTLM_PACKED TypesCommonTransfer1_TransferFrameStruct {
    U16 nextFrame;    /**< Number of next frame to be transferred  */
} TypesCommonTransfer1_TransferFrame;

/**
 * @brief Image Frame Information message structure
 * @details Information about the current frame in memory
 */
typedef struct TCTLM_PACKED TypesCommonTransfer1_FrameInfoStruct {
    U16 frameNumber;       /**< number of current frame loaded into download buffer  */
    U8 checkSum;           /**< XOR checksum of frame loaded into download buffer  */
    Boolean frameLast;     /**< Set if this is the last frame in the transfer  */
    Boolean frameError;    /**< Set if an error was encountered while processing the frame  */
} TypesCommonTransfer1_FrameInfo;

/**
 * @brief Data Frame message structure
 * @details A single frame of arbitrary data
 */
typedef struct TCTLM_PACKED TypesCommonTransfer1_FrameStruct {
    U16 frameSize;         /**< The effective frame size - number of bytes in FrameBytes populated with data  */
    U8 frameBytes[256];    /**< frame bytes  */
} TypesCommonTransfer1_Frame;

/*******************************************************************************
 *****************************   PROTOTYPES   **********************************
 ******************************************************************************/

#ifdef __cplusplus
}
#endif

#endif // TYPES_COMMON_TRANSFER_1_H
