/************************************************************************************
 * This file was auto-generated by CIDEA                           .                *
 * Please do not modify the contents of this file manually.                         *
 ***********************************************************************************/

#ifndef TCTLM_CUBE_COMPUTER_COMMON_3__H
#define TCTLM_CUBE_COMPUTER_COMMON_3__H

#include <cubeObc/cubeObc_typeDef.h>
#include <cubeObc/cubeObc_errorDef.h>
#include <cubeObc/cubeObc_tctlmDef.h>

#include "typesCubeComputerCommon3.h"
#include "typesCommonFrameworkTypes1.h"

#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
 *******************************   DEFINES   ***********************************
 ******************************************************************************/

/*******************************************************************************
 *******************************   TYPEDEFS  ***********************************
 ******************************************************************************/

/*******************************************************************************
 *****************************   PROTOTYPES   **********************************
 ******************************************************************************/

 /* SET function prototypes */

/**
 * @brief ID 56, Power state
 * @details Power state
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_setPowerState(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_PowerState *setVal);

/**
 * @brief ID 99, Pass Through 
 * @details TCTLM Passthrough settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_setPassThrough(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_PassThrough *setVal);

/**
 * @brief ID 111, Port Map
 * @details This telemetry describes the nodes that have been discovered i.e. connected to CubeConnect
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_setPortMap(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_PortMap *setVal);

/**
 * @brief ID 112, Unsolicited Telemetry Message Setup
 * @details Inclusion bitmask for unsolicited telemetry
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_setUnsolicitedTlmSetup(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_UnsolicitedTlmSetup *setVal);

/**
 * @brief ID 113, Reset Image File Info Index
 * @details Resets image file info index
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_setImageFileInfoReset(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 114, Set request image log transfer setup
 * @details Set request image log transfer setup
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_setImageTransferSetup(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_ImageTransferSetup *setVal);

/**
 * @brief ID 115, Set a dummy event
 * @details Set a dummy event to be stored in the event log
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_setDummyEvent(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_DummyEvent *setVal);

/**
 * @brief ID 116, Unsolicited Event Message Setup
 * @details Setup unsolicited event messages
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_setUnsolicitedEventSetup(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_UnsolicitedEventSetup *setVal);

/**
 * @brief ID 117, Set request telemetry log transfer setup
 * @details Set request telemetry log transfer setup
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_setTelemetryLogTransferSetup(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_TelemetryLogTransferSetup *setVal);

/**
 * @brief ID 120, Initiate Filtered Event Log Transfer
 * @details Initiate event log transfer by specifying time range and data filter
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_setEventLogFilterTransferSetup(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_EventLogFilterTransferSetup *setVal);

/**
 * @brief ID 122, Format all logs
 * @details Format all logs
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_setEraseLogData(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_EraseLogData *setVal);


 /* GET function prototypes */

/**
 * @brief ID 183, Power state
 * @details Power state
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_getPowerState(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_PowerState *returnVal);

/**
 * @brief ID 227, Telemtry log inclusion masks
 * @details Get the Telemtry log inclusion masks
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_getTelemtryLogInclusionMasks(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_TelemtryLogInclusionMasks *returnVal);

/**
 * @brief ID 228, Unsolicited Telemetry Message Setup
 * @details Inclusion bitmask for unsolicited telemetry
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_getUnsolicitedTlmSetup(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_UnsolicitedTlmSetup *returnVal);

/**
 * @brief ID 229, Pass Through 
 * @details TCTLM Passthrough settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_getPassThrough(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_PassThrough *returnVal);

/**
 * @brief ID 230, Component Error Codes
 * @details Error codes common to CubeComputer bootloader and control-program
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_getComponentErrorCodes(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_ComponentErrorCodes *returnVal);

/**
 * @brief ID 231, Image File Info
 * @details Stored image file information
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_getImageFileInfo(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_ImageFileInfo *returnVal);

/**
 * @brief ID 232, Image Transfer Status
 * @details Image Transfer Status
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_getImageTransferStatus(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_ImageTransferStatus *returnVal);

/**
 * @brief ID 233, Unsolicited Event Message Setup
 * @details Setup unsolicited event messages
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_getUnsolicitedEventSetup(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_UnsolicitedEventSetup *returnVal);

/**
 * @brief ID 234, Get the Telemtry log status response
 * @details Get the Telemtry log status response
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_getTelemtryLogStatus(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_TelemtryLogStatus *returnVal);

/**
 * @brief ID 235, Get the Event log status response
 * @details Get the Event log status response
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_getEventLogStatus(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_EventLogStatus *returnVal);

/**
 * @brief ID 238, Expected Nodes
 * @details Lists the expected nodes config item
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_getExpectedNodes(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_ExpectedNodes *returnVal);

/**
 * @brief ID 239, Port Map
 * @details This telemetry describes the nodes that have been discovered i.e. connected to CubeConnect
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_getPortMap(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_PortMap *returnVal);

/**
 * @brief ID 240, Port Diagnostics
 * @details Diagnostics relating to the inernal CubeConnect interface port
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeComputerCommon3_getPortDiagnostics(TypeDef_TctlmEndpoint *endpoint, TypesCubeComputerCommon3_PortDiagnostics *returnVal);


#ifdef __cplusplus
}
#endif

#endif // TCTLM_CUBE_COMPUTER_COMMON_3_H
