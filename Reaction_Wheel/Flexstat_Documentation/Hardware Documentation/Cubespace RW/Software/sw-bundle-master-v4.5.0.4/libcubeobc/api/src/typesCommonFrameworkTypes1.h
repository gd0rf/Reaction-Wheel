/************************************************************************************
 * This file was auto-generated by CIDEA                           .                *
 * Please do not modify the contents of this file manually.                         *
 ***********************************************************************************/

#ifndef TYPES_COMMON_FRAMEWORK_TYPES_1__H
#define TYPES_COMMON_FRAMEWORK_TYPES_1__H

#include <cubeObc/cubeObc_typeDef.h>
#include <cubeObc/cubeObc_errorDef.h>
#include <cubeObc/cubeObc_tctlmDef.h>


#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
 *******************************   DEFINES   ***********************************
 ******************************************************************************/

/*******************************************************************************
 *******************************   TYPEDEFS  ***********************************
 ******************************************************************************/

/**
 * @brief Enumeration for TypesCommonFrameworkTypes1_TcTlmError
*/
typedef enum TypesCommonFrameworkTypes1_TcTlmErrorEnum {
    TYPES_COMMON_FRAMEWORK_TYPES_1__OK = 0,                 /**< No Error */
    TYPES_COMMON_FRAMEWORK_TYPES_1__INVALID_ID = 1,         /**< Invalid TcTlm ID */
    TYPES_COMMON_FRAMEWORK_TYPES_1__INVALID_LENGTH = 2,     /**< Invalid Length */
    TYPES_COMMON_FRAMEWORK_TYPES_1__INVALID_PARAM = 3,      /**< Invalid Parameter */
    TYPES_COMMON_FRAMEWORK_TYPES_1__CRC = 4,                /**< CRC Check Failed */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NOT_IMPLEMENTED = 5,    /**< TCTLM not implemented */
    TYPES_COMMON_FRAMEWORK_TYPES_1__TC_TLM_BUSY = 6,        /**< Busy */
    TYPES_COMMON_FRAMEWORK_TYPES_1__SEQUENCE = 7,           /**< Error in sequence of commands */
    TYPES_COMMON_FRAMEWORK_TYPES_1__INTERNAL = 8,           /**< Internal error */
    TYPES_COMMON_FRAMEWORK_TYPES_1__PASS_TIMEOUT = 9,       /**< Passthrough node timeout error */
    TYPES_COMMON_FRAMEWORK_TYPES_1__PASS_TARGET = 10,       /**< Passthrough target is invalid (passthrough is disabled) */
} TypesCommonFrameworkTypes1_TcTlmError;

/**
 * @brief Enumeration for TypesCommonFrameworkTypes1_NodeTypeLegacy
*/
typedef enum TypesCommonFrameworkTypes1_NodeTypeLegacyEnum {
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_INVALID = 0,              /**< Invalid Node Type */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_CUBE_COMPUTER = 1,        /**< CubeComputer Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_CUBE_SENSE = 2,           /**< CubeSense Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_CUBE_WHEEL = 3,           /**< CubeWheel Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_CUBE_IR = 4,              /**< CubeIR Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_CUBE_MAG_DEPLOY = 5,      /**< CubeMag Deploy Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_CUBE_MAG_COMPACT = 6,     /**< CubeMag Compact Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_CUBE_STAR = 7,            /**< CubeStar Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_CUBE_AURIGA = 8,          /**< CubeAuriga Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_CUBE_NODE = 9,            /**< CubeNode General Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_CUBE_NODE_SLT = 10,       /**< CubeNode SLT Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_CUBE_NODE_PST3S = 11,     /**< CubeNode PST3S Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_CUBE_NODE_NSSRWL = 12,    /**< CubeNode NSSRWL Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_LEGACY_EXTENDED = 15,            /**< Marks the end of the 4-bit legacy enum - Make use of a different telemetry that uses the NodeType enum (Identification2) */
} TypesCommonFrameworkTypes1_NodeTypeLegacy;

/**
 * @brief Enumeration for TypesCommonFrameworkTypes1_NodeType
*/
typedef enum TypesCommonFrameworkTypes1_NodeTypeEnum {
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_INVALID = 0,                       /**< Invalid Node Type */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_COMPUTER = 1,                 /**< CubeComputer Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_SENSE = 2,                    /**< CubeSense Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_WHEEL = 3,                    /**< CubeWheel Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_IR = 4,                       /**< CubeIR Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_MAG_DEPLOY = 5,               /**< CubeMag Deploy Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_MAG_COMPACT = 6,              /**< CubeMag Compact Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_STAR = 7,                     /**< CubeStar Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_AURIGA = 8,                   /**< CubeAuriga Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_NODE = 9,                     /**< CubeNode General Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_NODE_SLT = 10,                /**< CubeNode SLT Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_NODE_PST3S = 11,              /**< CubeNode PST3S Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_NODE_NSSRWL = 12,             /**< CubeNode NSSRWL Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_NODE_QUAD = 16,               /**< CubeNodeQuad General Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_NODE_QUAD_PST3S = 17,         /**< CubeNodeQuad PST3S Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_NODE_QUAD_NSSRWL = 18,        /**< CubeNodeQuad NSSRWL Type - version independant */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_TYPE_CUBE_NODE_QUAD_LITEFUFORS = 19,    /**< CubeNodeQuad LITEFUFORS Type - version independant */
} TypesCommonFrameworkTypes1_NodeType;

/**
 * @brief Enumeration for TypesCommonFrameworkTypes1_ProgramType
*/
typedef enum TypesCommonFrameworkTypes1_ProgramTypeEnum {
    TYPES_COMMON_FRAMEWORK_TYPES_1__PROGRAM_TYPE_INVALID = 0,         /**< Invalid Program Type */
    TYPES_COMMON_FRAMEWORK_TYPES_1__PROGRAM_TYPE_CONTROL = 1,         /**< control-program primary product application */
    TYPES_COMMON_FRAMEWORK_TYPES_1__PROGRAM_TYPE_BOOTLOADER = 4,      /**< cube-computer flash-bootloader Bootloader application */
    TYPES_COMMON_FRAMEWORK_TYPES_1__PROGRAM_TYPE_HEALTH_CHECK = 5,    /**< health-check Health Check application */
} TypesCommonFrameworkTypes1_ProgramType;

/**
 * @brief Enumeration for TypesCommonFrameworkTypes1_AbstractNode
*/
typedef enum TypesCommonFrameworkTypes1_AbstractNodeEnum {
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_INVALID = 0,       /**< Invalid Abstract Node */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_COMPUTER = 1,      /**< CubeComputer */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_STR_0 = 2,         /**< Star tracker 0 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_STR_1 = 3,         /**< Star tracker 1 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_FSS_0 = 4,         /**< Fine sun sensor 0 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_FSS_1 = 5,         /**< Fine sun sensor 1 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_FSS_2 = 6,         /**< Fine sun sensor 2 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_FSS_3 = 7,         /**< Fine sun sensor 3 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_HSS_0 = 8,         /**< Horizon sun sensor 0 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_HSS_1 = 9,         /**< Horizon sun sensor 1 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_MAG_0 = 10,        /**< Magnetometer sensor 0 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_MAG_1 = 11,        /**< Magnetometer sensor 1 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_EXT_0 = 12,        /**< External sensor 0 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_EXT_1 = 13,        /**< External sensor 1 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_RWL_0 = 14,        /**< Reaction wheel 0 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_RWL_1 = 15,        /**< Reaction wheel 1 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_RWL_2 = 16,        /**< Reaction wheel 2 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_RWL_3 = 17,        /**< Reaction wheel 3 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_RWL_4 = 18,        /**< Reaction wheel 4 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_EXT_GYR_0 = 19,    /**< External gyro 0 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_EXT_GYR_1 = 20,    /**< External gyro 1 */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_CQ_0 = 21,         /**< CubeNode-Quad 0 (internal/reporting use only) */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_CQ_1 = 22,         /**< CubeNode-Quad 1 (internal/reporting use only) */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_CQ_2 = 23,         /**< CubeNode-Quad 2 (internal/reporting use only) */
    TYPES_COMMON_FRAMEWORK_TYPES_1__NODE_CQ_3 = 24,         /**< CubeNode-Quad 3 (internal/reporting use only) */
} TypesCommonFrameworkTypes1_AbstractNode;

/**
 * @brief Enumeration for TypesCommonFrameworkTypes1_SerialSource
*/
typedef enum TypesCommonFrameworkTypes1_SerialSourceEnum {
    TYPES_COMMON_FRAMEWORK_TYPES_1__SOURCE_OTP = 0,       /**< Serial number sourced from OTP */
    TYPES_COMMON_FRAMEWORK_TYPES_1__SOURCE_CONFIG = 1,    /**< Serial number sourced from Config */
} TypesCommonFrameworkTypes1_SerialSource;

/*******************************************************************************
 *****************************   PROTOTYPES   **********************************
 ******************************************************************************/

#ifdef __cplusplus
}
#endif

#endif // TYPES_COMMON_FRAMEWORK_TYPES_1_H
