/************************************************************************************
 * This file was auto-generated by CIDEA                           .                *
 * Please do not modify the contents of this file manually.                         *
 ***********************************************************************************/

#ifndef TCTLM_CUBE_MAG_CONTROL_PROGRAM_COMMON_1__H
#define TCTLM_CUBE_MAG_CONTROL_PROGRAM_COMMON_1__H

#include <cubeObc/cubeObc_typeDef.h>
#include <cubeObc/cubeObc_errorDef.h>
#include <cubeObc/cubeObc_tctlmDef.h>

#include "typesCubeMagControlProgramCommon1.h"
#include "typesCubeMagControlProgramCommonTypes1.h"

#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
 *******************************   DEFINES   ***********************************
 ******************************************************************************/

/*******************************************************************************
 *******************************   TYPEDEFS  ***********************************
 ******************************************************************************/

/*******************************************************************************
 *****************************   PROTOTYPES   **********************************
 ******************************************************************************/

 /* SET function prototypes */

/**
 * @brief ID 60, CubeMag Config
 * @details CubeMag Config Items
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeMagControlProgramCommon1_setConfig(TypeDef_TctlmEndpoint *endpoint, TypesCubeMagControlProgramCommon1_Config *setVal);

/**
 * @brief ID 61, MMC Magnetometer Config
 * @details MMC Magnetometer Specific Config
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeMagControlProgramCommon1_setMmcConfig(TypeDef_TctlmEndpoint *endpoint, TypesCubeMagControlProgramCommon1_MmcConfig *setVal);

/**
 * @brief ID 67, Sample Primary
 * @details Trigger a single Sample the Primary Magnetometer (auto-sample == OFF)
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeMagControlProgramCommon1_setSamplePrimary(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 68, MMC Calibration Parameters
 * @details MMC Magnetometer Calibration Parameters
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeMagControlProgramCommon1_setMmcCalibration(TypeDef_TctlmEndpoint *endpoint, TypesCubeMagControlProgramCommon1_MmcCalibration *setVal);


 /* GET function prototypes */

/**
 * @brief ID 185, MMC Calibration Parameters
 * @details MMC Magnetometer Calibration Parameters
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeMagControlProgramCommon1_getMmcCalibration(TypeDef_TctlmEndpoint *endpoint, TypesCubeMagControlProgramCommon1_MmcCalibration *returnVal);

/**
 * @brief ID 186, CubeMag Config
 * @details CubeMag Config Items
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeMagControlProgramCommon1_getConfig(TypeDef_TctlmEndpoint *endpoint, TypesCubeMagControlProgramCommon1_Config *returnVal);

/**
 * @brief ID 187, Primary Magnetometer Measurement Raw
 * @details Unfiltered last Primary Magnetometer Measurement
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeMagControlProgramCommon1_getPrimaryMagMeasurementRaw(TypeDef_TctlmEndpoint *endpoint, TypesCubeMagControlProgramCommon1_PrimaryMagMeasurementRaw *returnVal);

/**
 * @brief ID 188, State
 * @details All Service States
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeMagControlProgramCommon1_getState(TypeDef_TctlmEndpoint *endpoint, TypesCubeMagControlProgramCommon1_State *returnVal);

/**
 * @brief ID 196, MMC Magnetometer Config
 * @details MMC Magnetometer Specific Config
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeMagControlProgramCommon1_getMmcConfig(TypeDef_TctlmEndpoint *endpoint, TypesCubeMagControlProgramCommon1_MmcConfig *returnVal);

/**
 * @brief ID 197, Primary Magnetometer Measurement
 * @details Primary Magnetometer Measurement
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeMagControlProgramCommon1_getPrimaryMagMeasurement(TypeDef_TctlmEndpoint *endpoint, TypesCubeMagControlProgramCommon1_PrimaryMagMeasurement *returnVal);

/**
 * @brief ID 198, Primary Magnetometer Temperature
 * @details Main Magnetometer Measurement
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeMagControlProgramCommon1_getPrimaryMagTemp(TypeDef_TctlmEndpoint *endpoint, TypesCubeMagControlProgramCommon1_PrimaryMagTemp *returnVal);

/**
 * @brief ID 199, Primary Magnetometer Diagnostics
 * @details Primary Magnetometer Diagnostics
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeMagControlProgramCommon1_getPrimaryMagDiagnostics(TypeDef_TctlmEndpoint *endpoint, TypesCubeMagControlProgramCommon1_PrimaryMagDiagnostics *returnVal);


#ifdef __cplusplus
}
#endif

#endif // TCTLM_CUBE_MAG_CONTROL_PROGRAM_COMMON_1_H
