/************************************************************************************
 * This file was auto-generated by CIDEA                           .                *
 * Please do not modify the contents of this file manually.                         *
 ***********************************************************************************/

#ifndef TCTLM_CUBE_NODE_CONTROL_PROGRAM_NSSRWL_COMMON_1__H
#define TCTLM_CUBE_NODE_CONTROL_PROGRAM_NSSRWL_COMMON_1__H

#include <cubeObc/cubeObc_typeDef.h>
#include <cubeObc/cubeObc_errorDef.h>
#include <cubeObc/cubeObc_tctlmDef.h>

#include "typesCubeNodeControlProgramNssrwlCommon1.h"
#include "typesCommonFrameworkTypes1.h"
#include "typesCubeNodeCommonTypes1.h"

#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
 *******************************   DEFINES   ***********************************
 ******************************************************************************/

/*******************************************************************************
 *******************************   TYPEDEFS  ***********************************
 ******************************************************************************/

/*******************************************************************************
 *****************************   PROTOTYPES   **********************************
 ******************************************************************************/

 /* SET function prototypes */

/**
 * @brief ID 61, NSSRWL Software Reset
 * @details Set the NSSRWL Software Reset
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_setNssRwlSoftwareReset(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NssRwlSoftwareReset *setVal);

/**
 * @brief ID 62, Torque
 * @details Set torque
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_setNssRwlTorque(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NssRwlTorque *setVal);

/**
 * @brief ID 63, NSSRWL Power State
 * @details Set the NSSRWL Power State
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_setNssRwlPower(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NssRwlPower *setVal);

/**
 * @brief ID 64, Node Service Settings
 * @details Set/Get the Node Service Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_setNodeSvcSettings(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NodeSvcSettings *setVal);

/**
 * @brief ID 65, NSSRWL Service Settings
 * @details Set/Get the NSSRWL Service Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_setNssRwlSvcSettings(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NssRwlSvcSettings *setVal);

/**
 * @brief ID 66, Wheel Reference Speed
 * @details Set momentum wheel reference speed
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_setNssRwlWheelSpeedRef(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NssRwlWheelSpeedRef *setVal);

/**
 * @brief ID 67, Motor Current
 * @details Set motor current
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_setNssRwlMotorCurrent(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NssRwlMotorCurrent *setVal);


 /* GET function prototypes */

/**
 * @brief ID 182, Wheel Speed All
 * @details Wheel speed measurement for all wheels (does not depend on port selection)
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_getNssRwlWheelSpeedAll(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NssRwlWheelSpeedAll *returnVal);

/**
 * @brief ID 184, Raw NSSRWL System TLM Port 1
 * @details Get NSSRWL System TLM Packet from port 1
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_getNssRwlTlmSystem1(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NssRwlTlmSystem1 *returnVal);

/**
 * @brief ID 186, Raw NSSRWL Extended TLM Port 1
 * @details Get NSSRWL Extended TLM Packet from port 1
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_getNssRwlTlmExtended1(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NssRwlTlmExtended1 *returnVal);

/**
 * @brief ID 188, Raw NSSRWL Standard TLM Port 1
 * @details Get NSSRWL Standard TLM Packet from port 1
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_getNssRwlTlmStandard1(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NssRwlTlmStandard1 *returnVal);

/**
 * @brief ID 190, Wheel Speed Port 1
 * @details Wheel speed measurement from port 1
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_getNssRwlWheelSpeed1(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NssRwlWheelSpeed1 *returnVal);

/**
 * @brief ID 191, NSSRWL Service Settings
 * @details Set/Get the NSSRWL Service Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_getNssRwlSvcSettings(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NssRwlSvcSettings *returnVal);

/**
 * @brief ID 192, Node Service Settings
 * @details Set/Get the Node Service Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_getNodeSvcSettings(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NodeSvcSettings *returnVal);

/**
 * @brief ID 193, Node Service Status
 * @details Node Service Status
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_getNodeSvcStatus(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NodeSvcStatus *returnVal);

/**
 * @brief ID 194, NSSRWL Service Status
 * @details NSSRWL Service Status
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramNssrwlCommon1_getNssRwlSvcStatus(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramNssrwlCommon1_NssRwlSvcStatus *returnVal);


#ifdef __cplusplus
}
#endif

#endif // TCTLM_CUBE_NODE_CONTROL_PROGRAM_NSSRWL_COMMON_1_H
