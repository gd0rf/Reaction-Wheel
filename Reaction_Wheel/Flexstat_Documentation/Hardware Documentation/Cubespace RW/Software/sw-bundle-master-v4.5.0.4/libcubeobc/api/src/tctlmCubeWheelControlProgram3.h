/************************************************************************************
 * This file was auto-generated by CIDEA                           .                *
 * Please do not modify the contents of this file manually.                         *
 ***********************************************************************************/

#ifndef TCTLM_CUBE_WHEEL_CONTROL_PROGRAM_3__H
#define TCTLM_CUBE_WHEEL_CONTROL_PROGRAM_3__H

#include <cubeObc/cubeObc_typeDef.h>
#include <cubeObc/cubeObc_errorDef.h>
#include <cubeObc/cubeObc_tctlmDef.h>

#include "typesCubeWheelControlProgram3.h"
#include "typesCommonFrameworkTypes1.h"
#include "tctlmCommonFramework1.h"

#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
 *******************************   DEFINES   ***********************************
 ******************************************************************************/

/*******************************************************************************
 *******************************   TYPEDEFS  ***********************************
 ******************************************************************************/

/*******************************************************************************
 *****************************   PROTOTYPES   **********************************
 ******************************************************************************/

 /* SET function prototypes */

/**
 * @brief ID 1, Reset
 * @details Perform a soft reset
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setReset(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Reset *setVal);

/**
 * @brief ID 2, Current Unix time
 * @details Current Unix time
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setUnixTime(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_UnixTime *setVal);

/**
 * @brief ID 3, Error Log Index
 * @details Describes the index of the error log that will be read when calling GetErrorLogEntry
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setErrorLogIndex(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogIndex *setVal);

/**
 * @brief ID 4, Error Log Entry
 * @details Error Log Entry
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setErrorLogEntry(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogEntry *setVal);

/**
 * @brief ID 5, Error Log Clear
 * @details Clear the Error Log
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setErrorLogClear(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 6, Error Log Settings
 * @details Error Log Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setErrorLogSettings(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogSettings *setVal);

/**
 * @brief ID 7, Persist Config
 * @details Writes volatile config items to flash
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setConfigPersist(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 60, Motor Power
 * @details Switch motor power on/off
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setMotorPower(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_MotorPower *setVal);

/**
 * @brief ID 61, Backup Gain
 * @details Backup speed controller gain values
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setBackupGain(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_BackupGain *setVal);

/**
 * @brief ID 62, Clear Errors
 * @details Clear the processor error flags
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setClearErrors(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 63, Wheel Reference Torque
 * @details Set torque reference for wheel
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setWheelTorqueRef(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelTorqueRef *setVal);

/**
 * @brief ID 64, Wheel Reference Speed
 * @details Set momentum wheel reference speed
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setWheelSpeedRef(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelSpeedRef *setVal);

/**
 * @brief ID 65, Wheel Commanded Duty Cycle
 * @details Set motor commanded PWM control signal
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setWheelDuty(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelDuty *setVal);

/**
 * @brief ID 66, Backup Wheel Mode
 * @details Set the back-up wheel mode
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setBackupWheelMode(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_BackupWheelMode *setVal);

/**
 * @brief ID 67, Main Gain
 * @details Main speed controller gain values
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setMainGain(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_MainGain *setVal);

/**
 * @brief ID 68, PWM Gain
 * @details General PWM gain
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setPWMGain(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_PWMGain *setVal);

/**
 * @brief ID 69, Wheel Reference Distance
 * @details Drive rover for defined distance and max speed.
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setWheelTravelRef(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelTravelRef *setVal);

/**
 * @brief ID 70, Wheel Reference Speed Ramp Rate Limit
 * @details Set ramp rate limit for wheel speed reference
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_setWheelRefRampRateLimit(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelRefRampRateLimit *setVal);


 /* GET function prototypes */

/**
 * @brief ID 128, Identification
 * @details Identification information for this node (Legacy definition - use Identification2 instead)
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getIdentification(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Identification *returnVal);

/**
 * @brief ID 129, Serial Number
 * @details Unique serial number of the CubeSpace Component
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getSerialNumber(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_SerialNumber *returnVal);

/**
 * @brief ID 130, Error Log Index
 * @details Describes the index of the error log that will be read when calling GetErrorLogEntry
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getErrorLogIndex(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogIndex *returnVal);

/**
 * @brief ID 131, Error Log Entry
 * @details Error Log Entry
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getErrorLogEntry(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogEntry *returnVal);

/**
 * @brief ID 132, Error Log Settings
 * @details Error Log Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getErrorLogSettings(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogSettings *returnVal);

/**
 * @brief ID 133, Current Unix time
 * @details Current Unix time
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getUnixTime(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_UnixTime *returnVal);

/**
 * @brief ID 134, Persist Config Diagnostics
 * @details Diagnostics data for config persistence
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getConfigPersistDiagnostics(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ConfigPersistDiagnostics *returnVal);

/**
 * @brief ID 135, Communication Status
 * @details Communication Status
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getCommsStatus(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_CommsStatus *returnVal);

/**
 * @brief ID 136, Version
 * @details Firmware Version
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getVersion(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Version *returnVal);

/**
 * @brief ID 137, Boot Status
 * @details State information about the device boot process
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getBootStatus(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_BootStatus *returnVal);

/**
 * @brief ID 138, Telecommand Acknowledge
 * @details Used with the I2C protocol to receive Telecommand Ack/Nack
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getTelecommandAcknowledge(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_TelecommandAcknowledge *returnVal);

/**
 * @brief ID 139, Common Error Codes
 * @details Error codes common to all applications
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getCommonErrorCodes(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_CommonErrorCodes *returnVal);

/**
 * @brief ID 140, Identification2
 * @details Identification information for this node
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getIdentification2(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Identification2 *returnVal);

/**
 * @brief ID 183, Wheel Position Data
 * @details Complete wheel data
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getWheelPosData(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelPosData *returnVal);

/**
 * @brief ID 184, Wheel Model
 * @details Get the wheel model
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getWheelModel(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelModel *returnVal);

/**
 * @brief ID 185, Wheel Torque
 * @details Wheel Torque measurement
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getWheelTorque(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelTorque *returnVal);

/**
 * @brief ID 186, Wheel Reference Torque
 * @details Set torque reference for wheel
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getWheelTorqueRef(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelTorqueRef *returnVal);

/**
 * @brief ID 187, Control Mode
 * @details Get the motor control mode
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getControlMode(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_ControlMode *returnVal);

/**
 * @brief ID 188, Wheel Speed
 * @details Wheel speed measurement
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getWheelSpeed(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelSpeed *returnVal);

/**
 * @brief ID 189, Health Telemetry
 * @details Health telemetry for CubeWheel
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getHealthTlm(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_HealthTlm *returnVal);

/**
 * @brief ID 190, Wheel Data
 * @details Complete wheel data
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getWheelData(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelData *returnVal);

/**
 * @brief ID 191, PWM Gain
 * @details General PWM gain
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getPWMGain(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_PWMGain *returnVal);

/**
 * @brief ID 192, Backup Gain
 * @details Backup speed controller gain values
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getBackupGain(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_BackupGain *returnVal);

/**
 * @brief ID 193, Main Gain
 * @details Main speed controller gain values
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getMainGain(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_MainGain *returnVal);

/**
 * @brief ID 194, Status and Error Flags
 * @details Processor status and error flags
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getStatusErrorFlags(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_StatusErrorFlags *returnVal);

/**
 * @brief ID 195, Wheel Commanded Duty Cycle
 * @details Set motor commanded PWM control signal
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getWheelDuty(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelDuty *returnVal);

/**
 * @brief ID 196, Wheel Reference Speed
 * @details Set momentum wheel reference speed
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getWheelSpeedRef(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelSpeedRef *returnVal);

/**
 * @brief ID 197, Motor Power
 * @details Switch motor power on/off
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getMotorPower(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_MotorPower *returnVal);

/**
 * @brief ID 198, Backup Wheel Mode
 * @details Set the back-up wheel mode
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getBackupWheelMode(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_BackupWheelMode *returnVal);

/**
 * @brief ID 199, Stator Data
 * @details Data related to the motor stator windings
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getStator(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_Stator *returnVal);

/**
 * @brief ID 200, Wheel Reference Speed Ramp Rate Limit
 * @details Set ramp rate limit for wheel speed reference
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeWheelControlProgram3_getWheelRefRampRateLimit(TypeDef_TctlmEndpoint *endpoint, TypesCubeWheelControlProgram3_WheelRefRampRateLimit *returnVal);


#ifdef __cplusplus
}
#endif

#endif // TCTLM_CUBE_WHEEL_CONTROL_PROGRAM_3_H
