/************************************************************************************
 * This file was auto-generated by CIDEA                           .                *
 * Please do not modify the contents of this file manually.                         *
 ***********************************************************************************/

#ifndef TYPES_CUBE_MAG_CONTROL_PROGRAM_DEPLOY_1__H
#define TYPES_CUBE_MAG_CONTROL_PROGRAM_DEPLOY_1__H

#include <cubeObc/cubeObc_typeDef.h>
#include <cubeObc/cubeObc_errorDef.h>
#include <cubeObc/cubeObc_tctlmDef.h>

#include "typesCommonFramework1.h"
#include "typesCommonFrameworkTypes1.h"
#include "typesCubeMagControlProgramCommonTypes1.h"

#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
 *******************************   DEFINES   ***********************************
 ******************************************************************************/

/*******************************************************************************
 *******************************   TYPEDEFS  ***********************************
 ******************************************************************************/

/**
 * @brief Enumeration for TypesCubeMagControlProgramDeploy1_MagicDeployArm
*/
typedef enum TypesCubeMagControlProgramDeploy1_MagicDeployArmEnum {
    TYPES_CUBE_MAG_CONTROL_PROGRAM_DEPLOY_1__MAGIC_ARM = 11,    /**< Magic number to Arm CubeMag for deployment */
} TypesCubeMagControlProgramDeploy1_MagicDeployArm;

/**
 * @brief Enumeration for TypesCubeMagControlProgramDeploy1_MagicDeploy
*/
typedef enum TypesCubeMagControlProgramDeploy1_MagicDeployEnum {
    TYPES_CUBE_MAG_CONTROL_PROGRAM_DEPLOY_1__MAGIC_DEPLOY = 22,    /**< Deploy CubeMag */
} TypesCubeMagControlProgramDeploy1_MagicDeploy;

/**
 * @brief PNI Magnetometer Config message structure
 * @details PNI Magnetometer Specific Config
 */
typedef struct TCTLM_PACKED TypesCubeMagControlProgramDeploy1_PniConfigStruct {
    Boolean autoSample;                                                        /**< PNI Auto-Sample Enable/Disable  */
    TypesCubeMagControlProgramCommonTypes1_SamplePeriod autoSamplePeriod;      /**< PNI Auto Sample Period  */
    TypesCubeMagControlProgramCommonTypes1_FilterType sampleFilterType;        /**< PNI Sample Filter Type  */
    TypesCubeMagControlProgramCommonTypes1_FilterOrder sampleFilterOrder;      /**< PNI Sample Butterworth filter order  */
    U8 sampleFilterDepth;                                                      /**< PNI Sample Filter Depth when using Simple Averaging  */
    TypesCubeMagControlProgramCommonTypes1_SampleDuration singleSampleTime;    /**< PNI Sample Duration when Auto-Sample is disabled  */
    TypesCubeMagControlProgramCommonTypes1_SampleBusy sampleBusyAction;        /**< PNI Action to take when sample is busy when requested  */
    U32 maxErrorsMag;                                                          /**< PNI Maximum number of allowed megnetometer measurement errors  */
    U32 maxErrorsTmp;                                                          /**< PNI Maximum number of allowed temperature measurement errors  */
} TypesCubeMagControlProgramDeploy1_PniConfig;

/**
 * @brief PNI Calibration Parameters message structure
 * @details PNI Magnetometer Calibration Parameters
 */
typedef struct TCTLM_PACKED TypesCubeMagControlProgramDeploy1_PniCalibrationStruct {
    F32 xd1;    /**< X-Axis: d1  (valid range is between -100000  and 100000 ) */
    F32 xd2;    /**< X-Axis: d2  (valid range is between -100000  and 100000 ) */
    F32 xs1;    /**< X-Axis: s1  (valid range is between -100000  and 100000 ) */
    F32 xs2;    /**< X-Axis: s2  (valid range is between -100000  and 100000 ) */
    F32 yd1;    /**< Y-Axis: d1  (valid range is between -100000  and 100000 ) */
    F32 yd2;    /**< Y-Axis: d2  (valid range is between -100000  and 100000 ) */
    F32 ys1;    /**< Y-Axis: s1  (valid range is between -100000  and 100000 ) */
    F32 ys2;    /**< Y-Axis: s2  (valid range is between -100000  and 100000 ) */
    F32 zd1;    /**< Z-Axis: d1  (valid range is between -100000  and 100000 ) */
    F32 zd2;    /**< Z-Axis: d2  (valid range is between -100000  and 100000 ) */
    F32 zs1;    /**< Z-Axis: s1  (valid range is between -100000  and 100000 ) */
    F32 zs2;    /**< Z-Axis: s2  (valid range is between -100000  and 100000 ) */
} TypesCubeMagControlProgramDeploy1_PniCalibration;

/**
 * @brief Redundant Magnetometer Measurement message structure
 * @details Redundant Magnetometer Measurement
 */
typedef struct TCTLM_PACKED TypesCubeMagControlProgramDeploy1_RedMagMeasurementStruct {
    F32 x_axis;           /**< X_axis  (measurment unit is [nT]. valid range is between -800000 nT and 800000 nT) */
    F32 y_axis;           /**< Y_axis  (measurment unit is [nT]. valid range is between -800000 nT and 800000 nT) */
    F32 z_axis;           /**< Z_axis  (measurment unit is [nT]. valid range is between -800000 nT and 800000 nT) */
    Boolean dataValid;    /**< Is Data Valid  */
} TypesCubeMagControlProgramDeploy1_RedMagMeasurement;

/**
 * @brief Redundant Magnetometer Measurement Raw message structure
 * @details Unfiltered last Redundant Magnetometer Measurement
 */
typedef struct TCTLM_PACKED TypesCubeMagControlProgramDeploy1_RedMagMeasurementRawStruct {
    F32 x_axis;           /**< X_axis  (measurment unit is [nT]. valid range is between -800000 nT and 800000 nT) */
    F32 y_axis;           /**< Y_axis  (measurment unit is [nT]. valid range is between -800000 nT and 800000 nT) */
    F32 z_axis;           /**< Z_axis  (measurment unit is [nT]. valid range is between -800000 nT and 800000 nT) */
    Boolean dataValid;    /**< Is Data Valid  */
} TypesCubeMagControlProgramDeploy1_RedMagMeasurementRaw;

/**
 * @brief Deployment Status message structure
 * @details Deployment Status. Only Applicable to CubeMag Deploy type
 */
typedef struct TCTLM_PACKED TypesCubeMagControlProgramDeploy1_DeploymentStatusStruct {
    U32 burnCurrent;               /**< Burn Wire Current  (measurment unit is [mA]) */
    Boolean deploymentPinState;    /**< Deployment Detection Pin State  (valid range is between 0  and 1 ) */
    Boolean burnPinState;          /**< Deployment Burn Wire Enable Pin State  (valid range is between 0  and 1 ) */
    Boolean burnUnderCurrent;      /**< Burn Wire Under Current Flag  (valid range is between 0  and 1 ) */
    Boolean burnOverCurrent;       /**< Burn Wire Over Current Flag  (valid range is between 0  and 1 ) */
    Boolean deploymentTimeout;     /**< CubeMag did not detect deployment before configured timeout  (valid range is between 0  and 1 ) */
} TypesCubeMagControlProgramDeploy1_DeploymentStatus;

/**
 * @brief Arm Deploy message structure
 * @details Arm CubeMag for Deployment
 */
typedef struct TCTLM_PACKED TypesCubeMagControlProgramDeploy1_DeployArmStruct {
    TypesCubeMagControlProgramDeploy1_MagicDeployArm magic;    /**< Magic number to make sure it is a valid command. Should equal enumeration options  */
} TypesCubeMagControlProgramDeploy1_DeployArm;

/**
 * @brief Deploy message structure
 * @details Deploy CubeMag
 */
typedef struct TCTLM_PACKED TypesCubeMagControlProgramDeploy1_DeployStruct {
    TypesCubeMagControlProgramDeploy1_MagicDeploy magic;    /**< Magic number to make sure it is a valid command. Should equal enumeration options  */
} TypesCubeMagControlProgramDeploy1_Deploy;

/**
 * @brief Health Telemetry message structure
 * @details Health Telemetry for CubeMagDeploy
 */
typedef struct TCTLM_PACKED TypesCubeMagControlProgramDeploy1_HealthTlmStruct {
    U16 mcuCurrent;                /**< MCU current  (measurment unit is [mA]) */
    S16 mcuTemp;                   /**< MCU temperature in deg C  (measurment unit is [deg C]) */
    U16 mcuVoltage;                /**< MCU supply voltage  (measurment unit is [mV]. valid range is between 0 mV and 5000 mV) */
    F32 primMagTemp;               /**< Primary Magnetometer Temperature  (valid range is between -75  and 150 ) */
    F32 redMagTemp;                /**< Redundant Magnetometer Temperature  (valid range is between -75  and 150 ) */
    U32 burnCurrent;               /**< Burn Wire Current  (measurment unit is [mA]) */
    Boolean deploymentPinState;    /**< Deployment Detection Pin State  (valid range is between 0  and 1 ) */
    Boolean burnPinState;          /**< Deployment Burn Wire Enable Pin State  (valid range is between 0  and 1 ) */
    Boolean burnUnderCurrent;      /**< Burn Wire Under Current Flag  (valid range is between 0  and 1 ) */
    Boolean burnOverCurrent;       /**< Burn Wire Over Current Flag  (valid range is between 0  and 1 ) */
    Boolean deploymentTimeout;     /**< CubeMag did not detect deployment before configured timeout  (valid range is between 0  and 1 ) */
    U8 watchdogCount[5];           /**< Bitmask representing virtual watchdog region warning counters.  */
} TypesCubeMagControlProgramDeploy1_HealthTlm;

/**
 * @brief Redundant Magnetometer Temperature message structure
 * @details Redundant Magnetometer Measurement
 */
typedef struct TCTLM_PACKED TypesCubeMagControlProgramDeploy1_RedMagTempStruct {
    F32 temp;    /**< Temperature  (valid range is between -75  and 125 ) */
} TypesCubeMagControlProgramDeploy1_RedMagTemp;

/**
 * @brief Redundant Magnetometer Diagnostics message structure
 * @details Redundant Magnetometer Diagnostics
 */
typedef struct TCTLM_PACKED TypesCubeMagControlProgramDeploy1_RedMagDiagnosticsStruct {
    U32 lastErrorMag;     /**< Last Error Code from magnetometer measurement  */
    U32 errorCountMag;    /**< Error Counter for megnetometer measurement  */
    U32 lastErrorTmp;     /**< Last Error Code from temperature measurement  */
    U32 errorCountTmp;    /**< Error Counter for temperature measurement  */
} TypesCubeMagControlProgramDeploy1_RedMagDiagnostics;

/*******************************************************************************
 *****************************   PROTOTYPES   **********************************
 ******************************************************************************/

#ifdef __cplusplus
}
#endif

#endif // TYPES_CUBE_MAG_CONTROL_PROGRAM_DEPLOY_1_H
