/************************************************************************************
 * This file was auto-generated by CIDEA                           .                *
 * Please do not modify the contents of this file manually.                         *
 ***********************************************************************************/

#ifndef TCTLM_CUBE_AURIGA_CONTROL_PROGRAM_1__H
#define TCTLM_CUBE_AURIGA_CONTROL_PROGRAM_1__H

#include <cubeObc/cubeObc_typeDef.h>
#include <cubeObc/cubeObc_errorDef.h>
#include <cubeObc/cubeObc_tctlmDef.h>

#include "typesCubeAurigaControlProgram1.h"
#include "typesCommonFrameworkTypes1.h"
#include "tctlmCommonFramework1.h"
#include "tctlmCommonTransfer1.h"

#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
 *******************************   DEFINES   ***********************************
 ******************************************************************************/

/*******************************************************************************
 *******************************   TYPEDEFS  ***********************************
 ******************************************************************************/

/*******************************************************************************
 *****************************   PROTOTYPES   **********************************
 ******************************************************************************/

 /* SET function prototypes */

/**
 * @brief ID 1, Reset
 * @details Perform a soft reset
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setReset(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Reset *setVal);

/**
 * @brief ID 2, Current Unix time
 * @details Current Unix time
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setUnixTime(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_UnixTime *setVal);

/**
 * @brief ID 3, Error Log Index
 * @details Describes the index of the error log that will be read when calling GetErrorLogEntry
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setErrorLogIndex(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogIndex *setVal);

/**
 * @brief ID 4, Error Log Entry
 * @details Error Log Entry
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setErrorLogEntry(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogEntry *setVal);

/**
 * @brief ID 5, Error Log Clear
 * @details Clear the Error Log
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setErrorLogClear(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 6, Error Log Settings
 * @details Error Log Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setErrorLogSettings(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogSettings *setVal);

/**
 * @brief ID 7, Persist Config
 * @details Writes volatile config items to flash
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setConfigPersist(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 64, OH Power States
 * @details Optical Head Power States
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setOhPowerStates(TypeDef_TctlmEndpoint *endpoint, TypesCubeAurigaControlProgram1_OhPowerStates *setVal);

/**
 * @brief ID 65, Rtc Sync
 * @details Synchronize Auriga RTC with control interval
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setRtcSync(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 66, Configuration
 * @details Detector and sensor configuration settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setConfiguration(TypeDef_TctlmEndpoint *endpoint, TypesCubeAurigaControlProgram1_Configuration *setVal);

/**
 * @brief ID 67, Trigger Auriga OH Self Test
 * @details Perform self-test on all active optical heads
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setAurigaSelfTest(TypeDef_TctlmEndpoint *endpoint, TypesCubeAurigaControlProgram1_AurigaSelfTest *setVal);

/**
 * @brief ID 68, Trigger External SRAM Test
 * @details Perform test on eternal SRAM
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setExtMemTest(TypeDef_TctlmEndpoint *endpoint, TypesCubeAurigaControlProgram1_ExtMemTest *setVal);

/**
 * @brief ID 78, Data Frame
 * @details A single frame of arbitrary data
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setFrame(TypeDef_TctlmEndpoint *endpoint, TypesCommonTransfer1_Frame *setVal);

/**
 * @brief ID 79, Transfer Frame
 * @details Image frame to or from buffer
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_setTransferFrame(TypeDef_TctlmEndpoint *endpoint, TypesCommonTransfer1_TransferFrame *setVal);


 /* GET function prototypes */

/**
 * @brief ID 128, Identification
 * @details Identification information for this node (Legacy definition - use Identification2 instead)
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getIdentification(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Identification *returnVal);

/**
 * @brief ID 129, Serial Number
 * @details Unique serial number of the CubeSpace Component
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getSerialNumber(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_SerialNumber *returnVal);

/**
 * @brief ID 130, Error Log Index
 * @details Describes the index of the error log that will be read when calling GetErrorLogEntry
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getErrorLogIndex(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogIndex *returnVal);

/**
 * @brief ID 131, Error Log Entry
 * @details Error Log Entry
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getErrorLogEntry(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogEntry *returnVal);

/**
 * @brief ID 132, Error Log Settings
 * @details Error Log Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getErrorLogSettings(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogSettings *returnVal);

/**
 * @brief ID 133, Current Unix time
 * @details Current Unix time
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getUnixTime(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_UnixTime *returnVal);

/**
 * @brief ID 134, Persist Config Diagnostics
 * @details Diagnostics data for config persistence
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getConfigPersistDiagnostics(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ConfigPersistDiagnostics *returnVal);

/**
 * @brief ID 135, Communication Status
 * @details Communication Status
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getCommsStatus(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_CommsStatus *returnVal);

/**
 * @brief ID 136, Version
 * @details Firmware Version
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getVersion(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Version *returnVal);

/**
 * @brief ID 137, Boot Status
 * @details State information about the device boot process
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getBootStatus(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_BootStatus *returnVal);

/**
 * @brief ID 138, Telecommand Acknowledge
 * @details Used with the I2C protocol to receive Telecommand Ack/Nack
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getTelecommandAcknowledge(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_TelecommandAcknowledge *returnVal);

/**
 * @brief ID 139, Common Error Codes
 * @details Error codes common to all applications
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getCommonErrorCodes(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_CommonErrorCodes *returnVal);

/**
 * @brief ID 140, Identification2
 * @details Identification information for this node
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getIdentification2(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Identification2 *returnVal);

/**
 * @brief ID 185, SRAM Test Result
 * @details Result of SRAM Test Result
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getExtMemTestResult(TypeDef_TctlmEndpoint *endpoint, TypesCubeAurigaControlProgram1_ExtMemTestResult *returnVal);

/**
 * @brief ID 186, Auriga OH Self Test Results
 * @details Result of self-test of optical heads
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getAurigaSelfTestResults(TypeDef_TctlmEndpoint *endpoint, TypesCubeAurigaControlProgram1_AurigaSelfTestResults *returnVal);

/**
 * @brief ID 187, Configuration
 * @details Detector and sensor configuration settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getConfiguration(TypeDef_TctlmEndpoint *endpoint, TypesCubeAurigaControlProgram1_Configuration *returnVal);

/**
 * @brief ID 188, Auriga Attitude Data
 * @details Attitude tracking mode telemetry as defined in Auriga CP Library ICD
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getAurigaAttitudeData(TypeDef_TctlmEndpoint *endpoint, TypesCubeAurigaControlProgram1_AurigaAttitudeData *returnVal);

/**
 * @brief ID 189, Auriga Status TM
 * @details Status telemetry as defined in Auriga CP Library ICD
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getAurigaStatus(TypeDef_TctlmEndpoint *endpoint, TypesCubeAurigaControlProgram1_AurigaStatus *returnVal);

/**
 * @brief ID 190, Attitude Data
 * @details Estimated attitude in Quaternions
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getAttitudeData(TypeDef_TctlmEndpoint *endpoint, TypesCubeAurigaControlProgram1_AttitudeData *returnVal);

/**
 * @brief ID 191, Health Telemetry
 * @details Housekeeping telemetry and error flags
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getHealthTlm(TypeDef_TctlmEndpoint *endpoint, TypesCubeAurigaControlProgram1_HealthTlm *returnVal);

/**
 * @brief ID 192, OH Power States
 * @details Optical Head Power States
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getOhPowerStates(TypeDef_TctlmEndpoint *endpoint, TypesCubeAurigaControlProgram1_OhPowerStates *returnVal);

/**
 * @brief ID 219, Data Frame
 * @details A single frame of arbitrary data
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getFrame(TypeDef_TctlmEndpoint *endpoint, TypesCommonTransfer1_Frame *returnVal);

/**
 * @brief ID 220, Image Frame Information
 * @details Information about the current frame in memory
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeAurigaControlProgram1_getFrameInfo(TypeDef_TctlmEndpoint *endpoint, TypesCommonTransfer1_FrameInfo *returnVal);


#ifdef __cplusplus
}
#endif

#endif // TCTLM_CUBE_AURIGA_CONTROL_PROGRAM_1_H
