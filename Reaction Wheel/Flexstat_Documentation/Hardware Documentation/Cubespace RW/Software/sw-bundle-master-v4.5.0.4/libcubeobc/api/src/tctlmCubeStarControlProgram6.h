/************************************************************************************
 * This file was auto-generated by CIDEA                           .                *
 * Please do not modify the contents of this file manually.                         *
 ***********************************************************************************/

#ifndef TCTLM_CUBE_STAR_CONTROL_PROGRAM_6__H
#define TCTLM_CUBE_STAR_CONTROL_PROGRAM_6__H

#include <cubeObc/cubeObc_typeDef.h>
#include <cubeObc/cubeObc_errorDef.h>
#include <cubeObc/cubeObc_tctlmDef.h>

#include "typesCubeStarControlProgram6.h"
#include "typesCommonFrameworkTypes1.h"
#include "tctlmCommonFramework1.h"
#include "tctlmCommonTransfer1.h"

#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
 *******************************   DEFINES   ***********************************
 ******************************************************************************/

/*******************************************************************************
 *******************************   TYPEDEFS  ***********************************
 ******************************************************************************/

/*******************************************************************************
 *****************************   PROTOTYPES   **********************************
 ******************************************************************************/

 /* SET function prototypes */

/**
 * @brief ID 1, Reset
 * @details Perform a soft reset
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setReset(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Reset *setVal);

/**
 * @brief ID 2, Current Unix time
 * @details Current Unix time
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setUnixTime(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_UnixTime *setVal);

/**
 * @brief ID 3, Error Log Index
 * @details Describes the index of the error log that will be read when calling GetErrorLogEntry
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setErrorLogIndex(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogIndex *setVal);

/**
 * @brief ID 4, Error Log Entry
 * @details Error Log Entry
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setErrorLogEntry(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogEntry *setVal);

/**
 * @brief ID 5, Error Log Clear
 * @details Clear the Error Log
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setErrorLogClear(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 6, Error Log Settings
 * @details Error Log Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setErrorLogSettings(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogSettings *setVal);

/**
 * @brief ID 7, Persist Config
 * @details Writes volatile config items to flash
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setConfigPersist(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 59, Subsystem Power
 * @details Switch subsystem power
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setSubsystemPower(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_SubsystemPower *setVal);

/**
 * @brief ID 60, Read Sensor Register
 * @details Read sensor register
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setSensorRegisterRead(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_SensorRegisterRead *setVal);

/**
 * @brief ID 61, Sensor Settings
 * @details Sensor settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setSensorSettings(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_SensorSettings *setVal);

/**
 * @brief ID 62, Lens Distortion
 * @details Lens distortion parameters
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setLensDistortion(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_LensDistortion *setVal);

/**
 * @brief ID 63, Capture Image
 * @details Capture image only
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setCaptureOnly(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 64, Capture and detect
 * @details Capture image and perform star detection and identification
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setCaptureDetect(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_CaptureDetect *setVal);

/**
 * @brief ID 65, Detect and Identify Stars
 * @details Detect and identify stars only
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setDetectIdOnly(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 66, Detection Settings
 * @details Star detection settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setDetectionSettings(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_DetectionSettings *setVal);

/**
 * @brief ID 67, Setup Image Transfer
 * @details Setup image transfer details
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setImageTransferSetup(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_ImageTransferSetup *setVal);

/**
 * @brief ID 68, Write Sensor Register
 * @details Write sensor register
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setSensorRegisterWrite(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_SensorRegisterWrite *setVal);

/**
 * @brief ID 78, Data Frame
 * @details A single frame of arbitrary data
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setFrame(TypeDef_TctlmEndpoint *endpoint, TypesCommonTransfer1_Frame *setVal);

/**
 * @brief ID 79, Transfer Frame
 * @details Image frame to or from buffer
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_setTransferFrame(TypeDef_TctlmEndpoint *endpoint, TypesCommonTransfer1_TransferFrame *setVal);


 /* GET function prototypes */

/**
 * @brief ID 128, Identification
 * @details Identification information for this node (Legacy definition - use Identification2 instead)
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getIdentification(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Identification *returnVal);

/**
 * @brief ID 129, Serial Number
 * @details Unique serial number of the CubeSpace Component
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getSerialNumber(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_SerialNumber *returnVal);

/**
 * @brief ID 130, Error Log Index
 * @details Describes the index of the error log that will be read when calling GetErrorLogEntry
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getErrorLogIndex(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogIndex *returnVal);

/**
 * @brief ID 131, Error Log Entry
 * @details Error Log Entry
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getErrorLogEntry(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogEntry *returnVal);

/**
 * @brief ID 132, Error Log Settings
 * @details Error Log Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getErrorLogSettings(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogSettings *returnVal);

/**
 * @brief ID 133, Current Unix time
 * @details Current Unix time
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getUnixTime(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_UnixTime *returnVal);

/**
 * @brief ID 134, Persist Config Diagnostics
 * @details Diagnostics data for config persistence
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getConfigPersistDiagnostics(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ConfigPersistDiagnostics *returnVal);

/**
 * @brief ID 135, Communication Status
 * @details Communication Status
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getCommsStatus(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_CommsStatus *returnVal);

/**
 * @brief ID 136, Version
 * @details Firmware Version
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getVersion(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Version *returnVal);

/**
 * @brief ID 137, Boot Status
 * @details State information about the device boot process
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getBootStatus(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_BootStatus *returnVal);

/**
 * @brief ID 138, Telecommand Acknowledge
 * @details Used with the I2C protocol to receive Telecommand Ack/Nack
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getTelecommandAcknowledge(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_TelecommandAcknowledge *returnVal);

/**
 * @brief ID 139, Common Error Codes
 * @details Error codes common to all applications
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getCommonErrorCodes(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_CommonErrorCodes *returnVal);

/**
 * @brief ID 140, Identification2
 * @details Identification information for this node
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getIdentification2(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Identification2 *returnVal);

/**
 * @brief ID 187, Matching Stars Detection Result
 * @details Capture, star detection and identification status, and best three matching star pairs
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getBestStars(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_BestStars *returnVal);

/**
 * @brief ID 188, Health Telemetry
 * @details Housekeeping telemetry and error flags
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getHealthTlm(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_HealthTlm *returnVal);

/**
 * @brief ID 189, Detection Meta-data
 * @details Meta-data from star detection
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getDetectionMetaData(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_DetectionMetaData *returnVal);

/**
 * @brief ID 190, Status
 * @details Capture, star detection and identification status
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getStatus(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_Status *returnVal);

/**
 * @brief ID 191, Detection Settings
 * @details Star detection settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getDetectionSettings(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_DetectionSettings *returnVal);

/**
 * @brief ID 192, Lens Distortion
 * @details Lens distortion parameters
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getLensDistortion(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_LensDistortion *returnVal);

/**
 * @brief ID 193, Sensor Settings
 * @details Sensor settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getSensorSettings(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_SensorSettings *returnVal);

/**
 * @brief ID 195, Detected Stars
 * @details List of detected stars
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getDetectedStars(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_DetectedStars *returnVal);

/**
 * @brief ID 196, Sensor Register Value
 * @details Result of read/write sensor register
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getSensorRegisterValue(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_SensorRegisterValue *returnVal);

/**
 * @brief ID 197, Measured Quaternion Detection Result
 * @details Capture, star detection and identification status, and attitude quaternion
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getAttitude(TypeDef_TctlmEndpoint *endpoint, TypesCubeStarControlProgram6_Attitude *returnVal);

/**
 * @brief ID 219, Data Frame
 * @details A single frame of arbitrary data
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getFrame(TypeDef_TctlmEndpoint *endpoint, TypesCommonTransfer1_Frame *returnVal);

/**
 * @brief ID 220, Image Frame Information
 * @details Information about the current frame in memory
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeStarControlProgram6_getFrameInfo(TypeDef_TctlmEndpoint *endpoint, TypesCommonTransfer1_FrameInfo *returnVal);


#ifdef __cplusplus
}
#endif

#endif // TCTLM_CUBE_STAR_CONTROL_PROGRAM_6_H
