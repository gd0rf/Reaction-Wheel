/************************************************************************************
 * This file was auto-generated by CIDEA                           .                *
 * Please do not modify the contents of this file manually.                         *
 ***********************************************************************************/

#ifndef TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__H
#define TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__H

#include <cubeObc/cubeObc_typeDef.h>
#include <cubeObc/cubeObc_errorDef.h>
#include <cubeObc/cubeObc_tctlmDef.h>

#include "typesCommonFramework1.h"
#include "typesCubeNodeCommon1.h"
#include "typesCommonFrameworkTypes1.h"
#include "typesCubeNodeCommonTypes1.h"

#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
 *******************************   DEFINES   ***********************************
 ******************************************************************************/

/*******************************************************************************
 *******************************   TYPEDEFS  ***********************************
 ******************************************************************************/

/**
 * @brief Enumeration for TypesCubeNodeControlProgramLitefufors1_NodeState
*/
typedef enum TypesCubeNodeControlProgramLitefufors1_NodeStateEnum {
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__NODE_OFF = 0,          /**< Node is Off */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__NODE_IDLE = 1,         /**< Node is Idle */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__NODE_UFORS_PWR = 2,    /**< Node is powering on or off one or more uFORS */
} TypesCubeNodeControlProgramLitefufors1_NodeState;

/**
 * @brief Enumeration for TypesCubeNodeControlProgramLitefufors1_UforsState
*/
typedef enum TypesCubeNodeControlProgramLitefufors1_UforsStateEnum {
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__UFORS_OFF = 0,      /**< uFORS is Off */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__UFORS_BOOT = 1,     /**< uFORS is Booting */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__UFORS_RESET = 2,    /**< uFORS is being reset */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__UFORS_IDLE = 3,     /**< uFORS is Idle */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__UFORS_AUTO = 4,     /**< uFORS is Auto-Sampling */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__UFORS_ERROR = 5,    /**< uFORS is in an Error State */
} TypesCubeNodeControlProgramLitefufors1_UforsState;

/**
 * @brief Enumeration for TypesCubeNodeControlProgramLitefufors1_UforsPowerState
*/
typedef enum TypesCubeNodeControlProgramLitefufors1_UforsPowerStateEnum {
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__POWERED_NO_CHANGE = 0,    /**< No change */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__POWERED_OFF = 1,          /**< uFORS Power Off */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__POWERED_ON = 2,           /**< uFORS Power On */
} TypesCubeNodeControlProgramLitefufors1_UforsPowerState;

/**
 * @brief Enumeration for TypesCubeNodeControlProgramLitefufors1_UforsReqResult
*/
typedef enum TypesCubeNodeControlProgramLitefufors1_UforsReqResultEnum {
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__REQ_NONE = 0,          /**< No Request Yet */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__REQ = 1,               /**< Request Response */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__SUM_ERROR = 2,         /**< Sum Error */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__CORRUPT_DATA = 3,      /**< Corrupt Data */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__JUNK_DATA = 4,         /**< Junk Data */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__INCOMPLETE_MSG = 5,    /**< Incomplete Message */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__TIMEOUT = 6,           /**< Timeout */
    TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1__OVERFLOW = 7,          /**< Overflow */
} TypesCubeNodeControlProgramLitefufors1_UforsReqResult;

/**
 * @brief PowerState general structure
 */
typedef struct TypesCubeNodeControlProgramLitefufors1_PowerStateStruct {
    TypesCubeNodeControlProgramLitefufors1_UforsPowerState power;    /**< uFORS Power State  */
} TypesCubeNodeControlProgramLitefufors1_PowerState;

/**
 * @brief BootError general structure
 */
typedef struct TypesCubeNodeControlProgramLitefufors1_BootErrorStruct {
    U32 errorCode;    /**< Boot Error Code  */
} TypesCubeNodeControlProgramLitefufors1_BootError;

/**
 * @brief UforsStatus general structure
 */
typedef struct TypesCubeNodeControlProgramLitefufors1_UforsStatusStruct {
    TypesCubeNodeControlProgramLitefufors1_UforsState state;                /**< Service State  */
    U32 failCount;                                                          /**< Request Failure Count  */
    U32 failCountLastSuccess;                                               /**< Request Failure Count at Last Success  */
    TypesCubeNodeControlProgramLitefufors1_UforsReqResult lastReqResult;    /**< Last Request Result  */
} TypesCubeNodeControlProgramLitefufors1_UforsStatus;

/**
 * @brief UforsTlmData general structure
 */
typedef struct TypesCubeNodeControlProgramLitefufors1_UforsTlmDataStruct {
    F32 rate;                     /**< Angular rate  (measurment unit is [degps]. valid range is between -20 degps and 20 degps) */
    Boolean nogo;                 /**< Status - NOGO bit  */
    Boolean rstAck;               /**< Status - Reset acknowledge bit  */
    Boolean tempWarn;             /**< Status - temperature warning bit  */
    Boolean auxControlLoopErr;    /**< Status - auxiliary control loop error bit  */
    Boolean hardBitErr;           /**< Status - Hardware BIT error bit  */
    Boolean measRangeErr;         /**< Status - Measurement range exceeded bit  */
    Boolean unknwnCmd;            /**< Status - unknown command bit  */
} TypesCubeNodeControlProgramLitefufors1_UforsTlmData;

/**
 * @brief UforsSettings general structure
 */
typedef struct TypesCubeNodeControlProgramLitefufors1_UforsSettingsStruct {
    U32 maxReqErrors;       /**< uFORS Maximum Number of data request Errors Before Entering Error State  */
    U16 sampleFrequency;    /**< uFORS Sample Frequency  (measurment unit is [Hz]. valid range is between 5 Hz and 1000 Hz) */
    Boolean autoSample;     /**< uFORS Auto-Sample Enable/Disable  */
} TypesCubeNodeControlProgramLitefufors1_UforsSettings;

/**
 * @brief uFORS Power State message structure
 * @details Set the uFORS Power States
 */
typedef struct TCTLM_PACKED TypesCubeNodeControlProgramLitefufors1_UforsPowerStruct {
    TypesCubeNodeControlProgramLitefufors1_PowerState powerUfors[TYPES_CUBE_NODE_COMMON_TYPES_1__PORT_MAX];    /**< uFORS Power State  */
} TypesCubeNodeControlProgramLitefufors1_UforsPower;

/**
 * @brief Node Service Settings message structure
 * @details Set/Get the Node Service Settings
 */
typedef struct TCTLM_PACKED TypesCubeNodeControlProgramLitefufors1_NodeSvcSettingsStruct {
    Boolean uforsAutoBoot;    /**< uFORS Auto-Boot on Startup Enable/Disable  */
} TypesCubeNodeControlProgramLitefufors1_NodeSvcSettings;

/**
 * @brief uFORS Service Settings message structure
 * @details Set/Get the uFORS Service Settings - used by all instances
 */
typedef struct TCTLM_PACKED TypesCubeNodeControlProgramLitefufors1_UforsSvcSettingsStruct {
    U32 maxReqErrors;       /**< uFORS Maximum Number of data request Errors Before Entering Error State  */
    U16 sampleFrequency;    /**< uFORS Sample Frequency  (measurment unit is [Hz]. valid range is between 5 Hz and 1000 Hz) */
    Boolean autoSample;     /**< uFORS Auto-Sample Enable/Disable  */
} TypesCubeNodeControlProgramLitefufors1_UforsSvcSettings;

/**
 * @brief Node Service Status message structure
 * @details Node Service Status
 */
typedef struct TCTLM_PACKED TypesCubeNodeControlProgramLitefufors1_NodeSvcStatusStruct {
    TypesCubeNodeControlProgramLitefufors1_NodeState nodeState;                                              /**< CubeNode Node Service State  */
    TypesCubeNodeControlProgramLitefufors1_BootError bootError[TYPES_CUBE_NODE_COMMON_TYPES_1__PORT_MAX];    /**< uFORS Boot errors  */
} TypesCubeNodeControlProgramLitefufors1_NodeSvcStatus;

/**
 * @brief uFORS Service Status message structure
 * @details uFORS Service Status
 */
typedef struct TCTLM_PACKED TypesCubeNodeControlProgramLitefufors1_UforsSvcStatusStruct {
    TypesCubeNodeControlProgramLitefufors1_UforsStatus status[TYPES_CUBE_NODE_COMMON_TYPES_1__PORT_MAX];    /**< uFORS Status.  */
} TypesCubeNodeControlProgramLitefufors1_UforsSvcStatus;

/**
 * @brief uFORS TLM message structure
 * @details Get latest uFORS TLM Packets (does not perform a new request)
 */
typedef struct TCTLM_PACKED TypesCubeNodeControlProgramLitefufors1_UforsTlmStruct {
    TypesCubeNodeControlProgramLitefufors1_UforsTlmData tlm[TYPES_CUBE_NODE_COMMON_TYPES_1__PORT_MAX];    /**< uFORS TLM data.  */
} TypesCubeNodeControlProgramLitefufors1_UforsTlm;

/**
 * @brief Port 1 uFORS TLM message structure
 * @details Get uFORS TLM Packet from port 1 (performs a new request only if auto-sample is disabled)
 */
typedef struct TCTLM_PACKED TypesCubeNodeControlProgramLitefufors1_UforsTlmPort1Struct {
    TypesCubeNodeControlProgramLitefufors1_UforsTlmData tlm;    /**< uFORS TLM data.  */
} TypesCubeNodeControlProgramLitefufors1_UforsTlmPort1;

/**
 * @brief Port 2 uFORS TLM message structure
 * @details Get uFORS TLM Packet from port 2 (performs a new request only if auto-sample is disabled)
 */
typedef struct TCTLM_PACKED TypesCubeNodeControlProgramLitefufors1_UforsTlmPort2Struct {
    TypesCubeNodeControlProgramLitefufors1_UforsTlmData tlm;    /**< uFORS TLM data.  */
} TypesCubeNodeControlProgramLitefufors1_UforsTlmPort2;

/**
 * @brief Port 3 uFORS TLM message structure
 * @details Get uFORS TLM Packet from port 3 (performs a new request only if auto-sample is disabled)
 */
typedef struct TCTLM_PACKED TypesCubeNodeControlProgramLitefufors1_UforsTlmPort3Struct {
    TypesCubeNodeControlProgramLitefufors1_UforsTlmData tlm;    /**< uFORS TLM data.  */
} TypesCubeNodeControlProgramLitefufors1_UforsTlmPort3;

/**
 * @brief Port 4 uFORS TLM message structure
 * @details Get uFORS TLM Packet from port 4 (performs a new request only if auto-sample is disabled)
 */
typedef struct TCTLM_PACKED TypesCubeNodeControlProgramLitefufors1_UforsTlmPort4Struct {
    TypesCubeNodeControlProgramLitefufors1_UforsTlmData tlm;    /**< uFORS TLM data.  */
} TypesCubeNodeControlProgramLitefufors1_UforsTlmPort4;

/*******************************************************************************
 *****************************   PROTOTYPES   **********************************
 ******************************************************************************/

#ifdef __cplusplus
}
#endif

#endif // TYPES_CUBE_NODE_CONTROL_PROGRAM_LITEFUFORS_1_H
