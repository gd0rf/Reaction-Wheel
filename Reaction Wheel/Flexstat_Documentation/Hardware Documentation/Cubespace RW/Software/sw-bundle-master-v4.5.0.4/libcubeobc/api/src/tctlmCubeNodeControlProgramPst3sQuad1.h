/************************************************************************************
 * This file was auto-generated by CIDEA                           .                *
 * Please do not modify the contents of this file manually.                         *
 ***********************************************************************************/

#ifndef TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_QUAD_1__H
#define TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_QUAD_1__H

#include <cubeObc/cubeObc_typeDef.h>
#include <cubeObc/cubeObc_errorDef.h>
#include <cubeObc/cubeObc_tctlmDef.h>

#include "typesCubeNodeControlProgramPst3sQuad1.h"
#include "typesCommonFrameworkTypes1.h"
#include "typesCubeNodeControlProgramPst3sCommonTypes1.h"
#include "typesCubeNodeCommonTypes1.h"
#include "tctlmCommonFramework1.h"
#include "tctlmCubeNodeControlProgramPst3sCommon1.h"
#include "tctlmCubeNodeCommon1.h"

#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
 *******************************   DEFINES   ***********************************
 ******************************************************************************/

/*******************************************************************************
 *******************************   TYPEDEFS  ***********************************
 ******************************************************************************/

/*******************************************************************************
 *****************************   PROTOTYPES   **********************************
 ******************************************************************************/

 /* SET function prototypes */

/**
 * @brief ID 1, Reset
 * @details Perform a soft reset
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setReset(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Reset *setVal);

/**
 * @brief ID 2, Current Unix time
 * @details Current Unix time
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setUnixTime(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_UnixTime *setVal);

/**
 * @brief ID 3, Error Log Index
 * @details Describes the index of the error log that will be read when calling GetErrorLogEntry
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setErrorLogIndex(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogIndex *setVal);

/**
 * @brief ID 4, Error Log Entry
 * @details Error Log Entry
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setErrorLogEntry(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogEntry *setVal);

/**
 * @brief ID 5, Error Log Clear
 * @details Clear the Error Log
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setErrorLogClear(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 6, Error Log Settings
 * @details Error Log Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setErrorLogSettings(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogSettings *setVal);

/**
 * @brief ID 7, Persist Config
 * @details Writes volatile config items to flash
 *
 * @param[in] endpoint Node endpoint location
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setConfigPersist(TypeDef_TctlmEndpoint *endpoint);

/**
 * @brief ID 57, PST3S Dynamic Mode
 * @details Set the PST3S Dynamic Mode
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sDynamicMode(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sDynamicMode *setVal);

/**
 * @brief ID 58, PST3S SAA Mode
 * @details Set the PST3S SAA Mode
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sSaaMode(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sSaaMode *setVal);

/**
 * @brief ID 59, PST3S Service Settings
 * @details Set/Get the PST3S Service Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sSvcSettings(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sSvcSettings *setVal);

/**
 * @brief ID 60, PST3S Power State
 * @details Set the PST3S Power State
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sPower(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sPower *setVal);

/**
 * @brief ID 61, PST3S Quaternion Filtering
 * @details Set the PST3S Quaternion Filtering
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sQuaternionFiltering(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sQuaternionFiltering *setVal);

/**
 * @brief ID 62, PST3S Second Calibration (Unix Time)
 * @details Set the PST3S Second Calibration (Unix Time)
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sSecondCalibration(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sSecondCalibration *setVal);

/**
 * @brief ID 63, PST3S Image Exposure
 * @details Set the PST3S Image Exposure
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sExposure(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sExposure *setVal);

/**
 * @brief ID 65, PST3S Number of Navigation Stars
 * @details Set the PST3S Number of navigation stars
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sNumberNavigationStars(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sNumberNavigationStars *setVal);

/**
 * @brief ID 66, PST3S Four Star Search Threshold
 * @details Set the PST3S Four Star Search Threshold (Not Recommended)
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sFSST(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sFSST *setVal);

/**
 * @brief ID 67, PST3S Tracking Mode Threshold
 * @details Set the PST3S Tracking Mode Threshold (Not Recommended)
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sTrackingModeThreshold(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sTrackingModeThreshold *setVal);

/**
 * @brief ID 68, PST3S System Reset
 * @details Set the PST3S System Reset
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sSystemReset(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sSystemReset *setVal);

/**
 * @brief ID 69, PST3S Image Fixed Threshold
 * @details Set the PST3S Image Fixed Threshold (Factory Only)
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sImageFixedThreshold(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sImageFixedThreshold *setVal);

/**
 * @brief ID 70, Node Service Settings
 * @details Set/Get the Node Service Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setNodeSvcSettings(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_NodeSvcSettings *setVal);

/**
 * @brief ID 71, PST3S SAA Threshold
 * @details Set the PST3S SAA Threshold
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sSaaThreshold(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sSaaThreshold *setVal);

/**
 * @brief ID 72, PST3S EDAC Off
 * @details Set the PST3S EDAC Off
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPst3sEdacOff(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sEdacOff *setVal);

/**
 * @brief ID 127, 5V Power Switch State
 * @details Enable/Disable 5V Power Switch Downstream
 *
 * @param[in] endpoint Node endpoint location
 * @param[in] setVal Value Written
 *
 * @return ErrorCode ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_setPowerSwitchState(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeCommon1_PowerSwitchState *setVal);


 /* GET function prototypes */

/**
 * @brief ID 128, Identification
 * @details Identification information for this node (Legacy definition - use Identification2 instead)
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getIdentification(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Identification *returnVal);

/**
 * @brief ID 129, Serial Number
 * @details Unique serial number of the CubeSpace Component
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getSerialNumber(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_SerialNumber *returnVal);

/**
 * @brief ID 130, Error Log Index
 * @details Describes the index of the error log that will be read when calling GetErrorLogEntry
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getErrorLogIndex(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogIndex *returnVal);

/**
 * @brief ID 131, Error Log Entry
 * @details Error Log Entry
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getErrorLogEntry(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogEntry *returnVal);

/**
 * @brief ID 132, Error Log Settings
 * @details Error Log Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getErrorLogSettings(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ErrorLogSettings *returnVal);

/**
 * @brief ID 133, Current Unix time
 * @details Current Unix time
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getUnixTime(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_UnixTime *returnVal);

/**
 * @brief ID 134, Persist Config Diagnostics
 * @details Diagnostics data for config persistence
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getConfigPersistDiagnostics(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_ConfigPersistDiagnostics *returnVal);

/**
 * @brief ID 135, Communication Status
 * @details Communication Status
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getCommsStatus(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_CommsStatus *returnVal);

/**
 * @brief ID 136, Version
 * @details Firmware Version
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getVersion(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Version *returnVal);

/**
 * @brief ID 137, Boot Status
 * @details State information about the device boot process
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getBootStatus(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_BootStatus *returnVal);

/**
 * @brief ID 138, Telecommand Acknowledge
 * @details Used with the I2C protocol to receive Telecommand Ack/Nack
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getTelecommandAcknowledge(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_TelecommandAcknowledge *returnVal);

/**
 * @brief ID 139, Common Error Codes
 * @details Error codes common to all applications
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getCommonErrorCodes(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_CommonErrorCodes *returnVal);

/**
 * @brief ID 140, Identification2
 * @details Identification information for this node
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getIdentification2(TypeDef_TctlmEndpoint *endpoint, TypesCommonFramework1_Identification2 *returnVal);

/**
 * @brief ID 183, PST3S Config Port 3
 * @details Get the Last Sampled PST3S Config related data from port 3
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sConfig3(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sQuad1_Pst3sConfig3 *returnVal);

/**
 * @brief ID 184, PST3S Housekeeping Data Port 4
 * @details Get the Last Sampled PST3S Housekeeping related data from port 4
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sHousekeeping4(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sQuad1_Pst3sHousekeeping4 *returnVal);

/**
 * @brief ID 185, PST3S Housekeeping Data Port 2
 * @details Get the Last Sampled PST3S Housekeeping related data from port 2
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sHousekeeping2(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sQuad1_Pst3sHousekeeping2 *returnVal);

/**
 * @brief ID 186, PST3S Attitude Data Port 3
 * @details Get the Last Sampled PST3S Attitude Specific Data from port 3
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sAttitude3(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sQuad1_Pst3sAttitude3 *returnVal);

/**
 * @brief ID 187, PST3S RAW TLM Port 4
 * @details Get PST3S TLM Packet from port 4. Triggers TLM Request
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sTlm4(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sQuad1_Pst3sTlm4 *returnVal);

/**
 * @brief ID 188, PST3S RAW TLM Port 2
 * @details Get PST3S TLM Packet from port 2. Triggers TLM Request
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sTlm2(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sQuad1_Pst3sTlm2 *returnVal);

/**
 * @brief ID 189, Node Service Status
 * @details Node Service Status
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getNodeSvcStatus(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_NodeSvcStatus *returnVal);

/**
 * @brief ID 190, PST3S Config Port 1
 * @details Get the Last Sampled PST3S Config related data from port 1
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sConfig1(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sConfig1 *returnVal);

/**
 * @brief ID 191, PST3S Attitude Data Port 1
 * @details Get the Last Sampled PST3S Attitude Specific Data from port 1
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sAttitude1(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sAttitude1 *returnVal);

/**
 * @brief ID 192, PST3S Service Status
 * @details PST3S Service Status
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sSvcStatus(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sSvcStatus *returnVal);

/**
 * @brief ID 193, PST3S RAW TLM Port 1
 * @details Get PST3S TLM Packet from port 1. Triggers TLM Request
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sTlm1(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sTlm1 *returnVal);

/**
 * @brief ID 194, PST3S Housekeeping Data Port 1
 * @details Get the Last Sampled PST3S Housekeeping related data from port 1
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sHousekeeping1(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sHousekeeping1 *returnVal);

/**
 * @brief ID 195, PST3S Service Settings
 * @details Set/Get the PST3S Service Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sSvcSettings(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_Pst3sSvcSettings *returnVal);

/**
 * @brief ID 196, Node Service Settings
 * @details Set/Get the Node Service Settings
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getNodeSvcSettings(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sCommon1_NodeSvcSettings *returnVal);

/**
 * @brief ID 198, PST3S RAW TLM Port 3
 * @details Get PST3S TLM Packet from port 3. Triggers TLM Request
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sTlm3(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sQuad1_Pst3sTlm3 *returnVal);

/**
 * @brief ID 199, PST3S Attitude Data Port 2
 * @details Get the Last Sampled PST3S Attitude Specific Data from port 2
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sAttitude2(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sQuad1_Pst3sAttitude2 *returnVal);

/**
 * @brief ID 200, PST3S Attitude Data Port 4
 * @details Get the Last Sampled PST3S Attitude Specific Data from port 4
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sAttitude4(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sQuad1_Pst3sAttitude4 *returnVal);

/**
 * @brief ID 201, PST3S Housekeeping Data Port 3
 * @details Get the Last Sampled PST3S Housekeeping related data from port 3
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sHousekeeping3(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sQuad1_Pst3sHousekeeping3 *returnVal);

/**
 * @brief ID 202, PST3S Config Port 2
 * @details Get the Last Sampled PST3S Config related data from port 2
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sConfig2(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sQuad1_Pst3sConfig2 *returnVal);

/**
 * @brief ID 203, PST3S Config Port 4
 * @details Get the Last Sampled PST3S Config related data from port 4
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPst3sConfig4(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeControlProgramPst3sQuad1_Pst3sConfig4 *returnVal);

/**
 * @brief ID 252, CubeNode Model
 * @details CubeNode Model
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getNodeModel(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeCommon1_NodeModel *returnVal);

/**
 * @brief ID 253, 5V Power Switch State
 * @details Enable/Disable 5V Power Switch Downstream
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getPowerSwitchState(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeCommon1_PowerSwitchState *returnVal);

/**
 * @brief ID 254, Health Telemetry
 * @details HealthTelemetry for CubeNode
 *
 * @param[in] endpoint Node endpoint location
 * @param[out] returnVal Value Returned
 *
 * @return ErrorCode TCTLM__ERROR_OK on success
 */
ErrorCode tctlmCubeNodeControlProgramPst3sQuad1_getHealthTlm(TypeDef_TctlmEndpoint *endpoint, TypesCubeNodeCommon1_HealthTlm *returnVal);


#ifdef __cplusplus
}
#endif

#endif // TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_QUAD_1_H
